version: 2.0
jobs:
  build:
    machine: true
    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Start container
          command: docker-compose up -d

      - run: docker-compose exec web rails db:create
      - run: docker-compose exec web rails db:schema:load

      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

             docker-compose exec web rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy_stage:
    machine: true
    steps:
      - checkout
      - run:
          name: install Heroku CLI
          command: curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME_STAGE}
      - run:
          name: deploy to heroku_staging
          command: |
            docker login --username=_ --password=${HEROKU_API_KEY} registry.heroku.com
            heroku container:push web --app ${HEROKU_APP_NAME_STAGE}
      - run:
          name: rails db migrate
          command: heroku run rails db:migrate --app ${HEROKU_APP_NAME_STAGE}
      - run:
          name: release app
          command: heroku container:release web --app ${HEROKU_APP_NAME_STAGE}
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME_STAGE}

  deploy_prod:
    machine: true
    steps:
      - checkout
      - run:
          name: install Heroku CLI, if necessary
          command: curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME_PROD}
      - run:
          name: deploy to heroku_staging
          command: |
            docker login --username=_ --password=${HEROKU_API_KEY} registry.heroku.com
            heroku container:push web --app ${HEROKU_APP_NAME_PROD}
      - run:
          name: rails db migrate
          command: heroku run rails db:migrate --app ${HEROKU_APP_NAME_PROD}
      - run:
          name: release app
          command: heroku container:release web --app ${HEROKU_APP_NAME_PROD}
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME_PROD}

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy_stage:
          requires:
            - build
          filters:
            branches:
              only:
                - staging
      - deploy_prod:
          requires:
            - build
          filters:
            branches:
              only:
                - master
